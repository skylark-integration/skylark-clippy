{"version":3,"sources":["loads.js"],"names":["define","$","Agent","load","[object Object]","name","successCb","failCb","base_path","data","sounds","path","window","CLIPPY_CDN","mapDfd","_loadMap","agentDfd","_loadAgent","soundsDfd","_loadSounds","done","d","when","a","fail","dfd","_maps","Deferred","src","img","Image","onload","resolve","onerror","reject","setAttribute","promise","_sounds","audio","document","createElement","canPlayMp3","canPlayType","canPlayOgg","_loadScript","_data","_getAgentDfd","script","head","appendChild","ready","soundsReady"],"mappings":";;;;;;;AAAAA,QACI,iBACA,WACD,SAAUC,EAAGC,GACZ,mBACMC,EACFC,YAAYC,EAAMC,EAAWC,EAAQC,GAEjC,IAIIC,EAIAC,EARAC,GADJH,EAAYA,GAAaI,OAAOC,YAAc,8DACvBR,EACnBS,EAASX,EAAKY,SAASJ,GACvBK,EAAWb,EAAKc,WAAWZ,EAAMM,GACjCO,EAAYf,EAAKgB,YAAYd,EAAMM,GAEvCK,EAASI,KAAK,SAAUC,GACpBZ,EAAOY,IAGXH,EAAUE,KAAK,SAAUC,GACrBX,EAASW,IAMbpB,EAAEqB,KAAKR,EAAQE,EAAUE,GAAWE,KAJ3B,WACL,IAAIG,EAAI,IAAIrB,EAAMS,EAAMF,EAAMC,GAC9BJ,EAAUiB,KAE+BC,KAAKjB,GAEtDH,gBAAgBO,GACZ,IAAIc,EAAMtB,EAAKuB,MAAMf,GACrB,GAAIc,EACA,OAAOA,EACXA,EAAMtB,EAAKuB,MAAMf,GAAQV,EAAE0B,WAC3B,IAAIC,EAAMjB,EAAO,WACbkB,EAAM,IAAIC,MAId,OAHAD,EAAIE,OAASN,EAAIO,QACjBH,EAAII,QAAUR,EAAIS,OAClBL,EAAIM,aAAa,MAAOP,GACjBH,EAAIW,UAEfhC,mBAAmBC,EAAMM,GACrB,IAAIc,EAAMtB,EAAKkC,QAAQhC,GACvB,GAAIoB,EACA,OAAOA,EACXA,EAAMtB,EAAKkC,QAAQhC,GAAQJ,EAAE0B,WAC7B,IAAIW,EAAQC,SAASC,cAAc,SAC/BC,IAAeH,EAAMI,aAAe,KAAOJ,EAAMI,YAAY,cAC7DC,IAAeL,EAAMI,aAAe,KAAOJ,EAAMI,YAAY,8BACjE,GAAKD,GAAeE,EAEb,CACH,IAAIf,EAAMjB,GAAQ8B,EAAa,iBAAmB,kBAClDtC,EAAKyC,YAAYhB,QAHjBH,EAAIO,YAKR,OAAOP,EAAIW,UAEfhC,kBAAkBC,EAAMM,GACpB,IAAIc,EAAMtB,EAAK0C,MAAMxC,GACrB,GAAIoB,EACA,OAAOA,EACXA,EAAMtB,EAAK2C,aAAazC,GACxB,IAAIuB,EAAMjB,EAAO,YAEjB,OADAR,EAAKyC,YAAYhB,GACVH,EAAIW,UAEfhC,mBAAmBwB,GACf,IAAImB,EAASR,SAASC,cAAc,UACpCO,EAAOZ,aAAa,MAAOP,GAC3BmB,EAAOZ,aAAa,QAAS,SAC7BY,EAAOZ,aAAa,OAAQ,mBAC5BI,SAASS,KAAKC,YAAYF,GAE9B3C,oBAAoBC,GAChB,IAAIoB,EAAMtB,EAAK0C,MAAMxC,GAIrB,OAHKoB,IACDA,EAAMtB,EAAK0C,MAAMxC,GAAQJ,EAAE0B,YAExBF,GAiBf,OAdAtB,EAAKuB,SACLvB,EAAKkC,WACLlC,EAAK0C,UAaD1C,KAAMA,EACN+C,MAbJ,SAAe7C,EAAMI,GACPN,EAAK2C,aAAazC,GACxB2B,QAAQvB,IAYZ0C,YAVJ,SAAqB9C,EAAMI,GACvB,IAAIgB,EAAMtB,EAAKkC,QAAQhC,GAClBoB,IACDA,EAAMtB,EAAKkC,QAAQhC,GAAQJ,EAAE0B,YAEjCF,EAAIO,QAAQvB","file":"../loads.js","sourcesContent":["define([\n    'skylark-jquery',\n    './Agent'\n], function ($, Agent) {\n    'use strict';\n    class load {\n        constructor(name, successCb, failCb, base_path) {\n            base_path = base_path || window.CLIPPY_CDN || 'https://gitcdn.xyz/repo/pi0/clippyjs/master/assets/agents/';\n            let path = base_path + name;\n            let mapDfd = load._loadMap(path);\n            let agentDfd = load._loadAgent(name, path);\n            let soundsDfd = load._loadSounds(name, path);\n            let data;\n            agentDfd.done(function (d) {\n                data = d;\n            });\n            let sounds;\n            soundsDfd.done(function (d) {\n                sounds = d;\n            });\n            let cb = function () {\n                let a = new Agent(path, data, sounds);\n                successCb(a);\n            };\n            $.when(mapDfd, agentDfd, soundsDfd).done(cb).fail(failCb);\n        }\n        static _loadMap(path) {\n            let dfd = load._maps[path];\n            if (dfd)\n                return dfd;\n            dfd = load._maps[path] = $.Deferred();\n            let src = path + '/map.png';\n            let img = new Image();\n            img.onload = dfd.resolve;\n            img.onerror = dfd.reject;\n            img.setAttribute('src', src);\n            return dfd.promise();\n        }\n        static _loadSounds(name, path) {\n            let dfd = load._sounds[name];\n            if (dfd)\n                return dfd;\n            dfd = load._sounds[name] = $.Deferred();\n            let audio = document.createElement('audio');\n            let canPlayMp3 = !!audio.canPlayType && '' !== audio.canPlayType('audio/mpeg');\n            let canPlayOgg = !!audio.canPlayType && '' !== audio.canPlayType('audio/ogg; codecs=\"vorbis\"');\n            if (!canPlayMp3 && !canPlayOgg) {\n                dfd.resolve({});\n            } else {\n                let src = path + (canPlayMp3 ? '/sounds-mp3.js' : '/sounds-ogg.js');\n                load._loadScript(src);\n            }\n            return dfd.promise();\n        }\n        static _loadAgent(name, path) {\n            let dfd = load._data[name];\n            if (dfd)\n                return dfd;\n            dfd = load._getAgentDfd(name);\n            let src = path + '/agent.js';\n            load._loadScript(src);\n            return dfd.promise();\n        }\n        static _loadScript(src) {\n            let script = document.createElement('script');\n            script.setAttribute('src', src);\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            document.head.appendChild(script);\n        }\n        static _getAgentDfd(name) {\n            let dfd = load._data[name];\n            if (!dfd) {\n                dfd = load._data[name] = $.Deferred();\n            }\n            return dfd;\n        }\n    }\n    load._maps = {};\n    load._sounds = {};\n    load._data = {};\n    function ready(name, data) {\n        let dfd = load._getAgentDfd(name);\n        dfd.resolve(data);\n    }\n    function soundsReady(name, data) {\n        let dfd = load._sounds[name];\n        if (!dfd) {\n            dfd = load._sounds[name] = $.Deferred();\n        }\n        dfd.resolve(data);\n    }\n    return {\n        load: load,\n        ready: ready,\n        soundsReady: soundsReady\n    };\n});"]}